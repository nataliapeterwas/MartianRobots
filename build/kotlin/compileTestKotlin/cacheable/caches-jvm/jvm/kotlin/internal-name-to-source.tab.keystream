CommandProcessorTest@CommandProcessorTest$nothing happens when robot status is Lost$1@CommandProcessorTest$nothing happens when robot status is Lost$2@CommandProcessorTest$nothing happens when robot status is Lost$3ICommandProcessorTest$MoveRightCommand is called with correct parameters$1ICommandProcessorTest$MoveRightCommand is called with correct parameters$2ICommandProcessorTest$MoveRightCommand is called with correct parameters$3ICommandProcessorTest$MoveRightCommand is called with correct parameters$4ICommandProcessorTest$MoveRightCommand is called with correct parameters$5ICommandProcessorTest$MoveRightCommand is called with correct parameters$6ICommandProcessorTest$MoveRightCommand is called with correct parameters$7ICommandProcessorTest$MoveRightCommand is called with correct parameters$8HCommandProcessorTest$MoveLeftCommand is called with correct parameters$1HCommandProcessorTest$MoveLeftCommand is called with correct parameters$2HCommandProcessorTest$MoveLeftCommand is called with correct parameters$3HCommandProcessorTest$MoveLeftCommand is called with correct parameters$4HCommandProcessorTest$MoveLeftCommand is called with correct parameters$5HCommandProcessorTest$MoveLeftCommand is called with correct parameters$6HCommandProcessorTest$MoveLeftCommand is called with correct parameters$7HCommandProcessorTest$MoveLeftCommand is called with correct parameters$8KCommandProcessorTest$MoveForwardCommand is called with correct parameters$1KCommandProcessorTest$MoveForwardCommand is called with correct parameters$2KCommandProcessorTest$MoveForwardCommand is called with correct parameters$3KCommandProcessorTest$MoveForwardCommand is called with correct parameters$4KCommandProcessorTest$MoveForwardCommand is called with correct parameters$5KCommandProcessorTest$MoveForwardCommand is called with correct parameters$6KCommandProcessorTest$MoveForwardCommand is called with correct parameters$7KCommandProcessorTest$MoveForwardCommand is called with correct parameters$8VCommandProcessorTest$processCommands calls three commands when robot status is Alive$1VCommandProcessorTest$processCommands calls three commands when robot status is Alive$2VCommandProcessorTest$processCommands calls three commands when robot status is Alive$3VCommandProcessorTest$processCommands calls three commands when robot status is Alive$4VCommandProcessorTest$processCommands calls three commands when robot status is Alive$5VCommandProcessorTest$processCommands calls three commands when robot status is Alive$6VCommandProcessorTest$processCommands calls three commands when robot status is Alive$7VCommandProcessorTest$processCommands calls three commands when robot status is Alive$8VCommandProcessorTest$processCommands calls three commands when robot status is Alive$9WCommandProcessorTest$processCommands calls three commands when robot status is Alive$10tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$1tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$2tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$3tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$4tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$5tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$6tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$7tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$8tCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$9uCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$10uCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$11BCommandProcessorTest$logger is called when robot status is Alive$1BCommandProcessorTest$logger is called when robot status is Alive$2BCommandProcessorTest$logger is called when robot status is Alive$3BCommandProcessorTest$logger is called when robot status is Alive$4BCommandProcessorTest$logger is called when robot status is Alive$5BCommandProcessorTest$logger is called when robot status is Alive$6BCommandProcessorTest$logger is called when robot status is Alive$7BCommandProcessorTest$logger is called when robot status is Alive$8CommandsConfigConfigParserTestkCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$1kCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$2kCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$3rCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$actual$1qCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$1qCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$2qCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$3xCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$actual$1rCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$1rCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$2rCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$3yCommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$actual$1ConfigParserTestèConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$1èConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$2èConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$3èConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$4èConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$5èConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$6èConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$7èConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$8èConfigParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$9GameTest0GameTest$robot was created with a correct date$10GameTest$robot was created with a correct date$20GameTest$robot was created with a correct date$30GameTest$robot was created with a correct date$40GameTest$robot was created with a correct date$50GameTest$robot was created with a correct date$6BGameTest$startGame throws exception when width is bigger than 50$1BGameTest$startGame throws exception when width is bigger than 50$2BGameTest$startGame throws exception when width is bigger than 50$3BGameTest$startGame throws exception when width is bigger than 50$4BGameTest$startGame throws exception when width is bigger than 50$5BGameTest$startGame throws exception when width is bigger than 50$6BGameTest$startGame throws exception when width is bigger than 50$7BGameTest$startGame throws exception when width is bigger than 50$8BGameTest$startGame throws exception when width is bigger than 50$9CGameTest$startGame throws exception when width is bigger than 50$10CGameTest$startGame throws exception when width is bigger than 50$11CGameTest$startGame throws exception when width is bigger than 50$12CGameTest$startGame throws exception when width is bigger than 50$13PGameTest$startGame throws exception when robotPosition is bigger than gridSize$1PGameTest$startGame throws exception when robotPosition is bigger than gridSize$2PGameTest$startGame throws exception when robotPosition is bigger than gridSize$3/GameTest$processCommands was called correctly$1/GameTest$processCommands was called correctly$2/GameTest$processCommands was called correctly$3/GameTest$processCommands was called correctly$4/GameTest$processCommands was called correctly$5/GameTest$processCommands was called correctly$6/GameTest$processCommands was called correctly$7/GameTest$processCommands was called correctly$8/GameTest$processCommands was called correctly$9GridConfigParserTestnGridConfigParserTest$gridSizeParser throws exception when we pass incorrect gridSize (it length is 2)$actual$1GridConfigParserTest$gridSizeParser throws exception when we pass incorrect gridSize (it has blank space at beginning)$actual$1^GridConfigParserTest$GridSizeParser throws exception when width is 60 (it is too big)$actual$1GridTestMainInputConfigParserTest\MainInputConfigParserTest$mainInputParser throws exception when we pass empty input$actual$1wMainInputConfigParserTest$mainInput throws exception when we pass incorrect input (two lines instead of three)$actual$1ôMainInputConfigParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$1ôMainInputConfigParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$2ôMainInputConfigParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$3ôMainInputConfigParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$4ôMainInputConfigParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$5MoveForwardCommandTestgMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$1gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$2gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$3gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$4gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$5gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$6aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$1aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$2aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$3aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$4aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$5aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$6bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$1bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$2bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$3bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$4bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$5bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$6bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$7bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$8bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$9cMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$10MoveLeftCommandTestRMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$1RMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$2RMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$3MoveRightCommandTestTMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$1TMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$2TMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$3*PositionAndDirectionConfigConfigParserTestéPositionAndDirectionConfigConfigParserTest$robotPositionParser throws exception when we pass incorrect robotPosition (it length is 1)$actual$1òPositionAndDirectionConfigConfigParserTest$robotPositionParser throws exception when we pass incorrect robotPosition (incorrect format - 1 E 1)$actual$1äPositionAndDirectionConfigConfigParserTest$RobotPositionParser throw exception when its width is 60 and its bigger than grid size$actual$1	RobotTestuCommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$12                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    