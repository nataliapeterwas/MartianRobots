CommandsTestGameTestAGameTest$startGame sets robot on correct position after changes$1AGameTest$startGame sets robot on correct position after changes$2AGameTest$startGame sets robot on correct position after changes$3AGameTest$startGame sets robot on correct position after changes$4AGameTest$startGame sets robot on correct position after changes$5AGameTest$startGame sets robot on correct position after changes$6AGameTest$startGame sets robot on correct position after changes$7AGameTest$startGame sets robot on correct position after changes$8AGameTest$startGame sets robot on correct position after changes$9BGameTest$startGame sets robot on correct position after changes$10BGameTest$startGame sets robot on correct position after changes$11BGameTest$startGame sets robot on correct position after changes$12BGameTest$startGame sets robot on correct position after changes$13BGameTest$startGame sets robot on correct position after changes$14BGameTest$startGame sets robot on correct position after changes$15WGameTest$startGame works correctly - it sets robot in correct direction after changes$1WGameTest$startGame works correctly - it sets robot in correct direction after changes$2WGameTest$startGame works correctly - it sets robot in correct direction after changes$3WGameTest$startGame works correctly - it sets robot in correct direction after changes$4WGameTest$startGame works correctly - it sets robot in correct direction after changes$5WGameTest$startGame works correctly - it sets robot in correct direction after changes$6WGameTest$startGame works correctly - it sets robot in correct direction after changes$7WGameTest$startGame works correctly - it sets robot in correct direction after changes$8WGameTest$startGame works correctly - it sets robot in correct direction after changes$9XGameTest$startGame works correctly - it sets robot in correct direction after changes$10XGameTest$startGame works correctly - it sets robot in correct direction after changes$11XGameTest$startGame works correctly - it sets robot in correct direction after changes$12XGameTest$startGame works correctly - it sets robot in correct direction after changes$13XGameTest$startGame works correctly - it sets robot in correct direction after changes$14GridSizeParserTestlGridSizeParserTest$gridSizeParser throws exception when we pass incorrect gridSize (it length is 2)$actual$1}GridSizeParserTest$gridSizeParser throws exception when we pass incorrect gridSize (it has blank space at beginning)$actual$1\GridSizeParserTest$GridSizeParser throws exception when width is 60 (it is too big)$actual$1MainInputParserTestVMainInputParserTest$mainInputParser throws exception when we pass empty input$actual$1qMainInputParserTest$mainInput throws exception when we pass incorrect input (two lines instead of three)$actual$1“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$1“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$2“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$3“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$4“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$5“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$6“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$7“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$8“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$9MovesParserTest\MovesParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$1\MovesParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$2\MovesParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$3cMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$actual$1bMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$1bMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$2bMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$3iMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$actual$1cMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$1cMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$2cMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$3jMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$actual$1
ParserTest‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$1‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$2‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$3‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$4‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$5‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$6‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$7‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$8‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$9RobotAndGridTestORobotAndGridTest$setGrid throws exception when width is bigger than 50$actual$1RobotPositionParserTest{RobotPositionParserTest$robotPositionParser throws exception when we pass incorrect robotPosition (it length is 1)$actual$1…RobotPositionParserTest$robotPositionParser throws exception when we pass incorrect robotPosition (incorrect format - 1 E 1)$actual$1wRobotPositionParserTest$RobotPositionParser throw exception when its width is 60 and its bigger than grid size$actual$1BGameTest$startGame sets robot on correct position after changes$16BGameTest$startGame sets robot on correct position after changes$17BGameTest$startGame sets robot on correct position after changes$18XGameTest$startGame works correctly - it sets robot in correct direction after changes$15XGameTest$startGame works correctly - it sets robot in correct direction after changes$16XGameTest$startGame works correctly - it sets robot in correct direction after changes$17XGameTest$startGame works correctly - it sets robot in correct direction after changes$18XGameTest$startGame works correctly - it sets robot in correct direction after changes$19MGameTest$startGame works correctly - it breaks app when robot has been lost$1MGameTest$startGame works correctly - it breaks app when robot has been lost$2MGameTest$startGame works correctly - it breaks app when robot has been lost$3MGameTest$startGame works correctly - it breaks app when robot has been lost$4MGameTest$startGame works correctly - it breaks app when robot has been lost$5MGameTest$startGame works correctly - it breaks app when robot has been lost$6MGameTest$startGame works correctly - it breaks app when robot has been lost$7MGameTest$startGame works correctly - it breaks app when robot has been lost$8MGameTest$startGame works correctly - it breaks app when robot has been lost$9NGameTest$startGame works correctly - it breaks app when robot has been lost$10NGameTest$startGame works correctly - it breaks app when robot has been lost$11NGameTest$startGame works correctly - it breaks app when robot has been lost$12NGameTest$startGame works correctly - it breaks app when robot has been lost$13NGameTest$startGame works correctly - it breaks app when robot has been lost$14NGameTest$startGame works correctly - it breaks app when robot has been lost$15NGameTest$startGame works correctly - it breaks app when robot has been lost$16NGameTest$startGame works correctly - it breaks app when robot has been lost$17NGameTest$startGame works correctly - it breaks app when robot has been lost$18NGameTest$startGame works correctly - it breaks app when robot has been lost$19NGameTest$startGame works correctly - it breaks app when robot has been lost$20FGameTest$startGame doesn't go to next moves when robot has been lost$1FGameTest$startGame doesn't go to next moves when robot has been lost$2FGameTest$startGame doesn't go to next moves when robot has been lost$3FGameTest$startGame doesn't go to next moves when robot has been lost$4FGameTest$startGame doesn't go to next moves when robot has been lost$5FGameTest$startGame doesn't go to next moves when robot has been lost$6FGameTest$startGame doesn't go to next moves when robot has been lost$7FGameTest$startGame doesn't go to next moves when robot has been lost$8FGameTest$startGame doesn't go to next moves when robot has been lost$9GGameTest$startGame doesn't go to next moves when robot has been lost$10GGameTest$startGame doesn't go to next moves when robot has been lost$11GGameTest$startGame doesn't go to next moves when robot has been lost$12GGameTest$startGame doesn't go to next moves when robot has been lost$13GGameTest$startGame doesn't go to next moves when robot has been lost$14GGameTest$startGame doesn't go to next moves when robot has been lost$15GGameTest$startGame doesn't go to next moves when robot has been lost$16GGameTest$startGame doesn't go to next moves when robot has been lost$17GGameTest$startGame doesn't go to next moves when robot has been lost$18GGameTest$startGame doesn't go to next moves when robot has been lost$19GGameTest$startGame doesn't go to next moves when robot has been lost$20LCommandsTest$class MoveRightCommand correctly change direction from N to E$1LCommandsTest$class MoveRightCommand correctly change direction from N to E$2LCommandsTest$class MoveRightCommand correctly change direction from N to E$3MoveRightCommandTestTMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$1TMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$2TMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$3MoveLeftCommandTestRMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$1RMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$2RMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$3MoveForwardCommandTestgMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$1gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$2gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$3gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$4gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$5gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$6aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$1aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$2aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$3aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$4aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$5aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$6aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$7bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$1bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$2bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$3bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$4bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$5bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$6bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$7bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$8bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$9GridTestGGridTest$setGrid throws exception when width is bigger than 50$actual$1	RobotTest8RobotTest$setRobotPosition set him to correct position$18RobotTest$setRobotPosition set him to correct position$2;RobotTest$setRobotPosition set him with correct direction$1;RobotTest$setRobotPosition set him with correct direction$2BGameTest$startGame sets robot on correct position after changes$19BGameTest$startGame sets robot on correct position after changes$20BGameTest$startGame sets robot on correct position after changes$21                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  