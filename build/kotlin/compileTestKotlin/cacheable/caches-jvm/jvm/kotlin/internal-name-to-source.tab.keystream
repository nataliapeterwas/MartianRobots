GameTest)GameTest$startGame calls three commands$1)GameTest$startGame calls three commands$2)GameTest$startGame calls three commands$3)GameTest$startGame calls three commands$4)GameTest$startGame calls three commands$5)GameTest$startGame calls three commands$6)GameTest$startGame calls three commands$7)GameTest$startGame calls three commands$8IGameTest$startGame() calls only two commands and the last is not called$1IGameTest$startGame() calls only two commands and the last is not called$2IGameTest$startGame() calls only two commands and the last is not called$3IGameTest$startGame() calls only two commands and the last is not called$4IGameTest$startGame() calls only two commands and the last is not called$5IGameTest$startGame() calls only two commands and the last is not called$6IGameTest$startGame() calls only two commands and the last is not called$7IGameTest$startGame() calls only two commands and the last is not called$8GridSizeParserTestlGridSizeParserTest$gridSizeParser throws exception when we pass incorrect gridSize (it length is 2)$actual$1}GridSizeParserTest$gridSizeParser throws exception when we pass incorrect gridSize (it has blank space at beginning)$actual$1\GridSizeParserTest$GridSizeParser throws exception when width is 60 (it is too big)$actual$1GridTestGGridTest$setGrid throws exception when width is bigger than 50$actual$1MainInputParserTestVMainInputParserTest$mainInputParser throws exception when we pass empty input$actual$1qMainInputParserTest$mainInput throws exception when we pass incorrect input (two lines instead of three)$actual$1“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$1“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$2“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$3“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$4“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$5“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$6“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$7“MainInputParserTest$MovesParser correctly transforms 'FRLLL' to list contains of commandList moveForward, moveRight, moveLeft, moveLeft, moveLeft$8MoveForwardCommandTestgMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$1gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$2gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$3gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$4gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$5gMoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$6aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$1aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$2aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$3aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$4aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$5aMoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$6bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$1bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$2bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$3bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$4bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$5bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$6bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$7bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$8bMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$9cMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$10cMoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$11MoveLeftCommandTestRMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$1RMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$2RMoveLeftCommandTest$class MoveLeftCommand correctly change direction from W to S$3MoveRightCommandTestTMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$1TMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$2TMoveRightCommandTest$class MoveRightCommand correctly change direction from N to E$3MovesParserTest\MovesParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$1\MovesParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$2\MovesParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$3cMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$actual$1bMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$1bMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$2bMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$3iMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$actual$1cMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$1cMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$2cMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$3jMovesParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$actual$1
ParserTest‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$1‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$2‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$3‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$4‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$5‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$6‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$7‰ParserTest$Parser correctly transforms '5 3   1 1 E   RFLR' to list contains of commandList moveRight, moveForward, moveLeft, moveRight$8RobotPositionParserTest{RobotPositionParserTest$robotPositionParser throws exception when we pass incorrect robotPosition (it length is 1)$actual$1…RobotPositionParserTest$robotPositionParser throws exception when we pass incorrect robotPosition (incorrect format - 1 E 1)$actual$1wRobotPositionParserTest$RobotPositionParser throw exception when its width is 60 and its bigger than grid size$actual$1	RobotTest8RobotTest$setRobotPosition set him to correct position$18RobotTest$setRobotPosition set him to correct position$2;RobotTest$setRobotPosition set him with correct direction$1;RobotTest$setRobotPosition set him with correct direction$2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 