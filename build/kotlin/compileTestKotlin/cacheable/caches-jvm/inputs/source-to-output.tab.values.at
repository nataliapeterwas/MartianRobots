ass MoveForwardCommand correctly change his position when his direction is S$1.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$2.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$3.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$4.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$5.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$6.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$1.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$2.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$3.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$4.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$5.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$6.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$1.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$2.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$3.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$4.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$5.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$6.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$7.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$8.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$9.classë$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$10.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_modulessCommands calls command when robot status is Alive and not call when the status is Lost$5.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$6.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$7.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$1.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$2.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$3.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$4.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_modulet/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$11.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$1.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$2.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$3.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$4.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$5.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$6.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$7.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_moduledProcessorTest$logger is called when robot status is Alive$5.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$6.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$7.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_module called when robot status is Alive$7.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_moduleger is called when robot status is Alive$6.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$7.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_module called when robot status is Alive$7.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_module/build/classes/kotlin/test/GameTest$processCommands was called correctly$2.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$3.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$4.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$5.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$6.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$7.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$8.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$9.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$10.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$11.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$12.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$13.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$14.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_modulestatus is Alive and not call when the status is Lost$3.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$4.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$5.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$6.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$7.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$8.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$9.class£$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$10.class£$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$11.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$1.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$2.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$3.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$4.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$5.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$6.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$7.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_moduleses/kotlin/test/CommandProcessorTest$nothing happens when robot status is Lost$2.classn$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$nothing happens when robot status is Lost$3.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$1.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$2.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$3.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$4.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$5.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$6.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$7.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$8.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$1.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$2.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$3.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$4.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$5.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$6.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$7.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$8.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$1.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$2.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$3.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$4.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$5.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$6.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$7.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$8.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$1.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$2.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$3.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$4.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$5.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$6.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$7.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$8.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$9.classÖ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$10.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$1.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$2.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$3.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$4.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$5.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$6.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$7.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$8.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$9.class£$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$10.class£$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$11.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$1.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$2.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$3.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$4.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$5.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$6.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$7.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$8.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_module€  L$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest.classô$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$1.classô$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$2.classô$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$3.class†$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains Digit)$actual$1.classü$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$1.classü$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$2.classü$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$3.class¶$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains blank space)$actual$1.class†$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$1.class†$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$2.class†$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$3.classß$PROJECT_DIR$/build/classes/kotlin/test/CommandsConfigConfigParserTest$MovesParser throws exception when we pass incorrect moves (contains small letter)$actual$1.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_module·4 D$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$1.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$2.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$3.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$4.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$5.classï$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand correctly change his position when his direction is S$6.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$1.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$2.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$3.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$4.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$5.classè$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand doing nothing when robot's position is polluted$6.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$1.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$2.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$3.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$4.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$5.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$6.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$7.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$8.classê$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$9.classë$PROJECT_DIR$/build/classes/kotlin/test/MoveForwardCommandTest$class MoveForwardCommand makes that robot loses when he went outside grid$10.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_moduleÑ 6$PROJECT_DIR$/build/classes/kotlin/test/GridTest.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_module 5 6$PROJECT_DIR$/build/classes/kotlin/test/GameTest.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$robot was created with a correct date$1.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$robot was created with a correct date$2.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$robot was created with a correct date$3.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$robot was created with a correct date$4.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$robot was created with a correct date$5.class^$PROJECT_DIR$/build/classes/kotlin/test/GameTest$robot was created with a correct date$6.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$1.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$2.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$3.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$4.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$5.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$6.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$7.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$8.classp$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$9.classq$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$10.classq$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$11.classq$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$12.classq$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when width is bigger than 50$13.class~$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when robotPosition is bigger than gridSize$1.class~$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when robotPosition is bigger than gridSize$2.class~$PROJECT_DIR$/build/classes/kotlin/test/GameTest$startGame throws exception when robotPosition is bigger than gridSize$3.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$1.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$2.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$3.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$4.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$5.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$6.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$7.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$8.class]$PROJECT_DIR$/build/classes/kotlin/test/GameTest$processCommands was called correctly$9.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_module√l B$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest.classn$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$nothing happens when robot status is Lost$1.classn$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$nothing happens when robot status is Lost$2.classn$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$nothing happens when robot status is Lost$3.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$1.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$2.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$3.classw$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveRightCommand is called with correct parameters$4.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$1.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$2.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$3.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$4.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$5.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$6.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$7.classv$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveLeftCommand is called with correct parameters$8.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$1.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$2.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$3.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$4.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$5.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$6.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$7.classy$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$MoveForwardCommand is called with correct parameters$8.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$1.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$2.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$3.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$4.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$5.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$6.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$7.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$8.classÑ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$9.classÖ$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls three commands when robot status is Alive$10.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$1.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$2.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$3.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$4.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$5.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$6.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$7.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$8.class¢$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$9.class£$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$10.class£$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$processCommands calls command when robot status is Alive and not call when the status is Lost$11.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$1.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$2.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$3.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$4.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$5.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$6.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$7.classp$PROJECT_DIR$/build/classes/kotlin/test/CommandProcessorTest$logger is called when robot status is Alive$8.classL$PROJECT_DIR$/build/classes/kotlin/test/META-INF/MartianRobots.kotlin_module